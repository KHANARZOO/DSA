class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        Stack<Integer> st = new Stack<>();
        int n1 = nums1.length;
        int n2 = nums2.length;
        int[] ngRight1 = new int[n1];
        int[] ngRight2 = new int[n2];

        //first find the nextGreater to right for nums2 array
        ngRight2[n2-1] = -1;
        st.push(nums2[n2-1]);
        for(int i=n2-2;i>=0;i--){
            while(!st.isEmpty() && st.peek()<=nums2[i]){
                st.pop();
                if(st.isEmpty()){
                    ngRight2[i] = -1;
                }
            }
            if(!st.isEmpty()) ngRight2[i] = st.peek();
            st.push(nums2[i]);
        }
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i=0;i<n2;i++){
            map.put(nums2[i],ngRight2[i]);
        }
        for(int i=0;i<n1;i++){
            ngRight1[i] = map.get(nums1[i]);
        }
        return ngRight1;
    }
}
