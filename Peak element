class Solution {

    public int peakElement(int[] arr) {
       //[1, 9, 7, 5, 4, 8, 3]
       //Binary search - o(logn
       int n = arr.length;
       if(n==1) return n-1;
       int st = 0;
       int ed = n-1;
       int mid =0;
       while(st<=ed){
           mid = st+(ed-st)/2;
           //edge case - 5 6 -> mid=0 -> arr[mid]<arr[mid+1] st = mid+1 st=1 ed=1 mid=1
           if(mid==0 && arr[mid]>arr[mid+1]) return mid;
           else if(mid==0 && arr[mid]<arr[mid+1])st = mid+1;
           else if(mid==n-1 && arr[mid]>arr[mid-1]) return mid;
           
           
           else if(arr[mid-1]<arr[mid] && arr[mid]>arr[mid+1]) return mid;
           else if(arr[mid-1]>arr[mid] && arr[mid]>arr[mid+1]) ed = mid-1;
           else if(arr[mid-1]<arr[mid] && arr[mid]<arr[mid+1]) st = mid+1;
           else if(arr[mid-1]>arr[mid] && arr[mid]<arr[mid+1]) st = mid+1;
       }
        return -1;
    }
}
//1 2 3 mid = 0+(2-0)/2 =1 -> st=1+1=2 ed=2 2+0/2 = > 2
