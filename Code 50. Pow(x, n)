class Solution {
     public double myPow(double x, int n) {
        if (n == 0) return 1.0;
        
        // Handle negative exponent
        long N = n; // use long to avoid overflow for n = Integer.MIN_VALUE
        if (N < 0) {
            x = 1 / x;
            N = -N;
        }

        return power(x, N);
    }
    public double power(double x, long n) {
        if(x==1 || n==0) return 1.0;
        double halfPow = power(x, n/2);
        if(n%2==0){
            return halfPow*halfPow;
        }else{
            return halfPow*halfPow*x;
        }
    }
}
