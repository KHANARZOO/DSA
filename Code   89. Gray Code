class Solution {
    public List<Integer> grayCode(int n) {
        List<Integer> result  = new ArrayList<>();

        //sanity check
        if(n<=0) return new ArrayList<>();

        //base condition
        if(n==1){
            result .add(0);
            result .add(1);
            return result ;
        }
       // Recursive call to get (n - 1)-bit Gray Code
        List<Integer> prev = grayCode(n - 1);

        // First half: add 0 as MSB (same as previous list)
        for (int code : prev) {
            result.add(code); // Adding 0 at MSB does not change the number
        }

        // Second half: add 1 as MSB by reversing and adding 2^(n-1)
        int prefix = (int) Math.pow(2, n - 1);
        for (int i = prev.size() - 1; i >= 0; i--) {
            result.add(prefix + prev.get(i));
        }

        return result ;
    }
}
