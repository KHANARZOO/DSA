class MyStack {
    Queue<Integer> q1;
    Queue<Integer> q2;

    public MyStack() {
        q1 = new LinkedList<>();
        q2 = new LinkedList<>();
    }

    public void push(int x) {
        q1.add(x);
    }

    public int pop() {
        int size = q1.size();
        for (int i = 0; i < size - 1; i++) {
            q2.add(q1.remove());
        }
        int pop = q1.remove();
        //In order to swap the reference
        Queue<Integer> temp = q1;
        q1 = q2;
        q2 = temp;
        return pop;
    }

    public int top() {
        int size = q1.size();
        for (int i = 0; i < size - 1; i++) {
            q2.add(q1.remove());
        }
        int peek = q1.peek();
        //Insert the last ele left in q1
        q2.add(q1.remove());
        //In order to swap the reference
        Queue<Integer> temp = q1;
        q1 = q2;
        q2 = temp;
        return peek;
    }

    public boolean empty() {
        if (q1.isEmpty() && q2.isEmpty())
            return true;
        return false;
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */
